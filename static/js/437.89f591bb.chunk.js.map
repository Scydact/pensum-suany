{"version":3,"file":"static/js/437.89f591bb.chunk.js","mappings":"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","sources":["lib/fetch-cors.ts","extractor/unapec.ts"],"sourcesContent":["\r\n/** List of CORS proxies.\r\n * This allows this thing to run without backend. */\r\n// TODO: Add more? https://gist.github.com/jimmywarting/ac1be6ea0297c16c477e17f8fbe51347\r\nexport const CORS_PROXIES = [\r\n  '',                                       // no proxy\r\n  'https://api.allorigins.win/raw?url=',\r\n  'https://yacdn.org/serve/',\r\n  'https://cors-anywhere.herokuapp.com/',   // has request limit (200 per hour)\r\n  'https://crossorigin.me/',\r\n  'https://cors-proxy.htmldriven.com/?url=',// Fails with CORS (what!?)\r\n  'https://thingproxy.freeboard.io/fetch/', // problems with https requests\r\n  'http://www.whateverorigin.org/get?url=', // problems with https requests, deprecated?\r\n];\r\n\r\ntype RequestCallback = (\r\n  state: 'attempt' | 'request' | 'success' | 'error',\r\n  proxy: string,\r\n  proxyId: number,\r\n) => any;\r\n\r\n/**\r\n *\r\n * @param {String} url address for the HTML to fetch\r\n * @param {String} cacheOpt cache policy, defaults to force-cache,\r\n * but if cache must be reloaded, do 'relaod'.\r\n *\r\n * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Request/cache\r\n * @return {String} the resulting HTML string fragment\r\n */\r\nexport default async function fetchCORS(\r\n  /** URL to request */\r\n  url: string,\r\n  /** Fetch option headers of the request */\r\n  opts: RequestInit = {},\r\n  /** */\r\n  currentProxyCallback?: RequestCallback,\r\n  /** Proxy to use, if any. \r\n   * Can be a URL or an index to CORS_PROXIES.\r\n   * @example\r\n   * ['https://api.allorigins.win/raw?url='] // use allorigins.win\r\n   * [''] // Use no proxy\r\n   * ['', 'https://api.allorigins.win/raw?url='] // Check for no proxy first, then allorigins.\r\n   */\r\n  proxies = CORS_PROXIES\r\n) {\r\n  /** Current proxy ID */\r\n  let currentProxyIdx = 0;\r\n  while (currentProxyIdx < proxies.length) {\r\n\r\n    // Get current proxy\r\n    const proxy = proxies[currentProxyIdx];\r\n    \r\n    const startTime = new Date().getTime();\r\n    const currUrl = proxy + url;\r\n\r\n    /* Controller to cancel the fetch after a timeout. */\r\n    const controller = new AbortController();\r\n    const signal = controller.signal;\r\n    opts.signal = signal;\r\n    \r\n    const timeoutId = setTimeout(() => {\r\n      controller.abort();\r\n      console.warn('Timed out!');\r\n    }, 4e3);\r\n\r\n    // \r\n    try {\r\n      if (currentProxyCallback)\r\n        currentProxyCallback('attempt', proxy, currentProxyIdx);\r\n\r\n      var response = await fetch(currUrl, opts);\r\n\r\n      if (currentProxyCallback)\r\n        currentProxyCallback('request', proxy, currentProxyIdx);\r\n\r\n      clearTimeout(timeoutId);\r\n      if (response.ok) {\r\n        const stopTime = new Date().getTime();\r\n        console.info(`CORS proxy '${currUrl}' succeeded in ${stopTime - startTime} ms.'`);\r\n\r\n        if (currentProxyCallback)\r\n          currentProxyCallback('success', proxy, currentProxyIdx);\r\n\r\n        return await response.text();\r\n      } else {\r\n        throw new Error('Response was not OK!');\r\n      }\r\n    } \r\n    \r\n    catch (err) {\r\n      clearTimeout(timeoutId);\r\n      const stopTime = new Date().getTime();\r\n      console.warn(`CORS proxy '${proxy}' failed in ${stopTime - startTime}ms.'`);\r\n      console.warn(err);\r\n\r\n      if (currentProxyCallback)\r\n        currentProxyCallback('error', proxy, currentProxyIdx);\r\n    } \r\n    \r\n    finally {\r\n      ++currentProxyIdx;\r\n    }\r\n  }\r\n  return null;\r\n}","import { convertPensum2 } from \"functions/pensum-converter\";\r\nimport fetchCORS from \"lib/fetch-cors\";\r\nimport { japaneseDateFormat } from \"lib/format-utils\";\r\n\r\n/** Fetches a pensum from UNAPEC. */\r\nexport default async function fetchPensum(\r\n  code: string,\r\n  requestCallback: Parameters<typeof fetchCORS>[2],\r\n  api_url = 'https://servicios.unapec.edu.do/pensum/Main/Detalles/') {\r\n  const url = api_url + code;\r\n\r\n  const opts: RequestInit = { cache: 'force-cache' };\r\n  const text = await fetchCORS(url, opts, requestCallback);\r\n\r\n  if (!text) return null;\r\n\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(text, 'text/xml');\r\n\r\n  const pensum = extractPensum(doc, url);\r\n  return pensum;\r\n}\r\n\r\n/**\r\n * Extracts the pensum data from the given DOM node.\r\n * @param node DOM node. Can be made from the GET request using `new DOMParser().parseFromString(msg, 'text/xml');`\r\n */\r\nexport function extractPensum(node: Document, url: string) {\r\n  // Legacy pensum\r\n  try {\r\n    const old = legactExtractPensum(node);\r\n    const pensum = convertPensum2(old, 'unapec');\r\n\r\n    pensum.fetchDate = japaneseDateFormat(new Date());\r\n    pensum.src = {\r\n      type: 'online',\r\n      date: pensum.fetchDate,\r\n      url,\r\n    }\r\n\r\n    return pensum;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return null;\r\n  }\r\n}\r\n\r\n/** Directly taken from the original project */\r\nexport function legactExtractPensum(node: Document): Pensum.Save.Legacy.Pensum2 {\r\n  let out: Pensum.Save.Legacy.Pensum2 = {\r\n    carrera: '',\r\n    codigo: '',\r\n    vigencia: '',\r\n    infoCarrera: [],\r\n    cuats: [],\r\n    version: 2,\r\n  };\r\n\r\n  // Verify if pensum is actually valid data\r\n  if (\r\n    node.getElementsByClassName('contPensum').length === 0 ||\r\n    node.getElementsByClassName('contPensum')[0].children.length < 2\r\n  ) {\r\n    throw new Error('Document has no pensum inside!');\r\n  }\r\n\r\n  // Extract basic data\r\n  var cabPensum = node.getElementsByClassName('cabPensum')[0];\r\n  if (!cabPensum) throw new Error('Unable to get table element.');\r\n\r\n  out.carrera = cabPensum?.firstElementChild?.textContent?.trim() || '';\r\n\r\n  var pMeta = cabPensum.getElementsByTagName('p')[0].children;\r\n  out.codigo = pMeta[0]?.textContent?.trim() || '';\r\n  out.vigencia = pMeta[1]?.textContent?.trim() || '';\r\n\r\n  if (out.carrera === '') throw new Error('Unable to get pensum name');\r\n  if (out.codigo === '') throw new Error('Unable to get pensum code');\r\n\r\n  // Extract infoCarrera\r\n  var infoCarrera = node.getElementsByClassName('infoCarrera')[0].children;\r\n  for (let i = 0; i < infoCarrera.length; ++i) {\r\n    out.infoCarrera.push(\r\n      infoCarrera[i]?.textContent?.replace(/\\n/g, ' ')?.trim() || ''\r\n    );\r\n  }\r\n\r\n  // Extract cuats\r\n  var cuatrim = node.getElementsByClassName('cuatrim');\r\n\r\n  for (let i = 0; i < cuatrim.length; ++i) {\r\n    /**\r\n     * @type {HTMLTableElement}\r\n     */\r\n    let currentCuatTable = cuatrim[i];\r\n    let rows = currentCuatTable.children;\r\n\r\n    let outCuat: Pensum.Save.Legacy.Mat[] = [];\r\n\r\n    for (let j = 1; j < rows.length; ++j) {\r\n      let outMat: Pensum.Save.Legacy.Mat = {\r\n        codigo: '',\r\n        asignatura: '',\r\n        creditos: 0,\r\n      };\r\n\r\n      const prereq: string[] = [];\r\n      const prereqExtra: string[] = [];\r\n\r\n      outMat.prereq = prereq;\r\n      outMat.prereqExtra = prereqExtra;\r\n\r\n\r\n      let currentRows = rows[j].children;\r\n      outMat.codigo = currentRows[0]?.textContent?.trim() || '';\r\n      outMat.asignatura = currentRows[1]?.textContent?.trim() || '';\r\n      outMat.creditos = parseFloat(currentRows[2]?.textContent || '-Infinity');\r\n\r\n      if (outMat.codigo === '') throw new Error(`Unable to get code for mat ${outMat.asignatura} @ cuat ${i + 1}`);\r\n      if (outMat.asignatura === '') throw new Error(`Unable to get name for mat ${outMat.codigo} @ cuat ${i + 1}`);\r\n      if (outMat.creditos === -Infinity) throw new Error(`Unable to get creds for mat ${outMat.codigo}:${outMat.asignatura} @ cuat ${i + 1}`);\r\n\r\n      // Prerequisitos\r\n      var splitPrereq = (currentRows[3]?.textContent || '')\r\n        .replace(/\\n/g, ',')\r\n        .split(',')\r\n        .map((x) => x.trim())\r\n        .filter((e) => e !== '');\r\n\r\n      for (let i = 0; i < splitPrereq.length; i++) {\r\n        let a = splitPrereq[i];\r\n        if (a.length < 8) prereq.push(a);\r\n        else prereqExtra.push(a);\r\n      }\r\n\r\n      outCuat.push(outMat);\r\n    }\r\n    out.cuats.push(outCuat);\r\n  }\r\n  return out;\r\n}\r\n\r\n"],"names":["CORS_PROXIES","fetchCORS","_x","_fetchCORS","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","opts","currentProxyCallback","proxies","currentProxyIdx","_loop","response","_ret","_args2","wrap","_context2","prev","next","length","undefined","proxy","startTime","currUrl","controller","signal","timeoutId","stopTime","_stopTime","_context","Date","getTime","AbortController","setTimeout","abort","console","warn","fetch","sent","clearTimeout","ok","info","concat","text","t0","abrupt","v","Error","t1","finish","stop","delegateYield","fetchPensum","_x2","_fetchPensum","code","requestCallback","parser","doc","pensum","_args","cache","DOMParser","parseFromString","extractPensum","node","old","legactExtractPensum","convertPensum2","fetchDate","japaneseDateFormat","src","type","date","err","error","_cabPensum$firstEleme","_cabPensum$firstEleme2","_pMeta$","_pMeta$$textContent","_pMeta$2","_pMeta$2$textContent","out","carrera","codigo","vigencia","infoCarrera","cuats","version","getElementsByClassName","children","cabPensum","firstElementChild","textContent","trim","pMeta","getElementsByTagName","i","_infoCarrera$i","_infoCarrera$i$textCo","_infoCarrera$i$textCo2","push","replace","cuatrim","rows","outCuat","j","_currentRows$","_currentRows$$textCon","_currentRows$2","_currentRows$2$textCo","_currentRows$3","_currentRows$4","outMat","asignatura","creditos","prereq","prereqExtra","currentRows","parseFloat","Infinity","splitPrereq","split","map","x","filter","e","a"],"sourceRoot":""}